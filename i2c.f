
: I2C{ BASEADDR 804000 + ;
: }I2C DROP ;

AE CONSTANT SLAVEADDR

VARIABLE SAMPLE

I2C{
PIN BSC_CR PIN BSC_SR
PIN BSC_DLEN PIN BSC_SLV
PIN BSC_FIFO PIN BSC_CLKD
PIN BSC_DATD PIN BSC_CLKT
}I2C

\BASEADDR 804000 + CONSTANT BSC_CR
\BASEADDR 804004 + CONSTANT BSC_SR
\BASEADDR 804008 + CONSTANT BSC_DLEN
\BASEADDR 80400C + CONSTANT BSC_SLV
\BASEADDR 804010 + CONSTANT BSC_FIFO
\BASEADDR 804014 + CONSTANT BSC_CLKD
\BASEADDR 804018 + CONSTANT BSC_DATD
\BASEADDR 80401C + CONSTANT BSC_CLKT

: I2C_ENABLE? ( -- ) F BSC_CR GET_BIT . ;
: I2C_ON ( -- ) BSC_CR @ 8000 INVERT AND 8000 OR BSC_CR ! ;
: I2C_OFF ( -- ) BSC_CR @ 8000 INVERT AND 0 OR BSC_CR ! ;
: I2C_START ( -- ) BSC_CR @ 80 OR BSC_CR ! ;
: I2C_WRITE ( -- ) BSC_CR @ 0 INVERT AND 0 OR BSC_CR ! ;
: I2C_READ ( -- ) BSC_CR @ 1 INVERT AND 1 OR BSC_CR ! ;
: I2C_CLEAR ( -- ) BSC_CR @ 20 OR BSC_CR ! ;
: I2C_STATUS ( -- ) BSC_SR @ U. ;
: I2C_DLEN ( n -- ) BSC_DLEN ! ;
: I2C_SETSLAVE ( addr -- ) BSC_SLV ! ;
: I2C_GETSLAVE ( -- ) BSC_SLV @ U. ;
: I2C_WFIFO ( data -- ) BSC_FIFO ! ;
: I2C_RFIFO ( -- data ) BSC_FIFO @ ;
: I2C_TD ( -- bit ) 1 BSC_SR GET_BIT ;   \Trasferimento completato?
: I2C_AT ( -- bit ) 0 BSC_SR GET_BIT ;   \Trasferimento attivo?
: I2C_RESETSR ( -- ) BSC_SR @ 302 INVERT AND 302 OR BSC_SR ! ;
: CHECKI2C BSC_CR GET_BIT . ;

: GPIO_I2C ( -- )
    2 GPFSEL GPIO_AF0
    3 GPFSEL GPIO_AF0 ;

\ aspetta fino all'effettivo invio del messaggio
: WAIT_DONE ( -- )
  BEGIN I2C_TD 1 = UNTIL ;

 \ aspetta fino al trasferimento attivo
: WAIT_AT ( -- )
  BEGIN I2C_AT 0 = UNTIL ;

: BSC_ENABLE ( -- ) GPIO_I2C I2C_ON ;

: WRITE_I2C ( data slave len -- )
    I2C_CLEAR
    I2C_RESETSR
    I2C_DLEN
    I2C_SETSLAVE
    I2C_FIFO
    I2C_WRITE
    I2C_START
    WAIT_DONE
    WAIT_AT ;

: READ_I2C ( data slave len -- )
    I2C_CLEAR
    I2C_RESETSR
    I2C_DLEN
    I2C_FIFO
    I2C_READ
    I2C_START
    WAIT_DONE
    WAIT_AT ;

\MYCODE\
\ SETUP DEI PIN GPIO 2 & 3 PER I2C (ALT FUNCTIONS)
\: SETUP 900 GPFSEL0 @ OR GPFSEL0 ! ;

\ RESET STATUS REGISTER
\: RESTORE_SR 302 BSC_SR ! ;

\ RESET FIFO
\: RESTORE_FIFO 10 BSC_CR ! ;

\ SETUP SLAVE ADDRESS 
\: SETUP_SLAVE 68 BSC_SLV ! ;

\ Memorizza dati dentro il registro FIFO
\: STORE BSC_FIFO ! ;

\ Avvio nuovo trasferimento
\: TRANSFER 8080 BSC_CR ! ;

\: I2C RESTORE_SR RESTORE_FIFO 1 BSC_DLEN + ! SETUP_SLAVE STORE TRANSFER ;

\ Scrittura di 1 Byte alla volta
\: >I2C RESTORE_SR RESTORE_FIFO 1 BSC_DLEN ! SETUP_SLAVE STORE TRANSFER ;
