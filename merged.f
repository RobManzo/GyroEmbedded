HEX

: '(' [ CHAR ( ] LITERAL ;
: ')' [ CHAR ) ] LITERAL ;
: '"' [ CHAR " ] LITERAL ;

: ( IMMEDIATE 1 BEGIN KEY DUP '(' = IF DROP 1+ ELSE ')' = IF 1- THEN THEN DUP 0= UNTIL DROP ;
: ALIGNED ( c-addr -- a-addr )
  3 + 3 INVERT AND ;
: ALIGN HERE @ ALIGNED HERE ! ;
: C, HERE @ C! 1 HERE +! ;
: H/L AND 0 > ;
: S" IMMEDIATE ( -- addr len )
	STATE @ IF
		' LITS , HERE @ 0 ,
		BEGIN KEY DUP '"'
                <> WHILE C, REPEAT
		DROP DUP HERE @ SWAP - 4- SWAP ! ALIGN
	ELSE
		HERE @
		BEGIN KEY DUP '"'
                <> WHILE OVER C! 1+ REPEAT
		DROP HERE @ - HERE @ SWAP
	THEN
;
: ." IMMEDIATE ( -- )
	STATE @ IF
		[COMPILE] S" ' TELL ,
	ELSE
		BEGIN KEY DUP '"' = IF DROP EXIT THEN EMIT AGAIN
	THEN ;

\*****se-ansforth*****
: JF-HERE HERE ;
: JF-CREATE CREATE ;
: JF-FIND FIND ;
: JF-WORD WORD ;
: HERE JF-HERE @ ;
: ALLOT HERE + JF-HERE ! ;
: ['] ' LIT , ; IMMEDIATE
: ' JF-WORD JF-FIND >CFA ;
: CELL+ 4 + ;
: ALIGNED 3 + 3 INVERT AND ;
: ALIGN JF-HERE @ ALIGNED JF-HERE ! ;
: DOES>CUT LATEST @ >CFA @ DUP JF-HERE @ > IF JF-HERE ! ;
: CREATE JF-WORD JF-CREATE DOCREATE , ;
: (DODOES-INT) ALIGN JF-HERE @ LATEST @ >CFA ! DODOES> ['] LIT ,  LATEST @ >DFA , ;
: (DODOES-COMP) (DODOES-INT) ['] LIT , , ['] FIP! , ;
: DOES>COMP ['] LIT , HERE 3 CELLS + , ['] (DODOES-COMP) , ['] EXIT , ;
: DOES>INT (DODOES-INT) LATEST @ HIDDEN ] ;
: DOES> STATE @ 0= IF DOES>INT ELSE DOES>COMP THEN ; IMMEDIATE
DROP
\*****************\

7E000000 CONSTANT BASEADDR

: MASK 1 SWAP LSHIFT ;
: PIN DUP CONSTANT 4 + ;
: GET_BIT @ SWAP RSHIFT 2 MOD  ;
: SKIP 4 + ;

BASEADDR 200000 + CONSTANT GPIO_BASE

\STRUTTURA PER DEFINIRE INDIRIZZI MULTIPLI
: GPIO{ GPIO_BASE 34 + ;   
: }GPIO DROP ;
GPIO{
PIN GPLEV0 PIN GPLEV1 SKIP
PIN GPEDS0 PIN GPEDS1 SKIP
PIN GPREN0 PIN GPREN1 SKIP
PIN GPFEN0 PIN GPFEN1 SKIP
PIN GPHEN0 PIN GPHEN1 SKIP
PIN GPLEN0 PIN GPLEN1
}GPIO

\GPIO_BASE 00 + CONSTANT GPFSEL0
\GPIO_BASE 04 + CONSTANT GPFSEL1
\GPIO_BASE 1C + CONSTANT GPSET0
\GPIO_BASE 28 + CONSTANT GPCLR0
\GPIO_BASE 4C + CONSTANT GPREN0
\GPIO_BASE 58 + CONSTANT GPFEN0
\GPIO_BASE E4 + CONSTANT GPPUP0

: GPON ( pin -- ) 20 /MOD 4 * BASEADDR 20001C + + SWAP MASK SWAP ! ;

: GPOFF ( pin -- ) 20 /MOD 4 * BASEADDR 200028 + + SWAP MASK SWAP ! ;

: GPFSEL ( gpioPinNumber -- addr_gpfsel clr_value_gpfsel offset_base )
    A /MOD 4 * BASEADDR 200000 + + SWAP 3 * DUP 7 SWAP LSHIFT ROT DUP @ ROT INVERT AND ROT ;
: GPIO_INPUT ( addr_gpfsel clr_value_gpfsel offset_base -- )
    1 SWAP LSHIFT INVERT AND SWAP ! ;
: GPIO_OUTPUT ( addr_gpfsel clr_value_gpfsel offset_base -- )
    1 SWAP LSHIFT OR SWAP ! ;
: GPIO_AF0 ( addr_gpfsel clr_value_gpfsel offset_base -- )
    1 SWAP 2 + LSHIFT OR SWAP ! ;
: EVENT_DETECT ( pin -- event )
    MASK GPEDS0 @ AND 0 <> -1 = ;
: PIN_LEVEL ( pin -- level )
    MASK GPLEV0 @ AND 0 = IF 0 ELSE 1 THEN ;
: CLEAR_EVENT ( pin -- )
    MASK GPEDS0 @ OR GPEDS0 ! ;
: FALLING_EDGE_DETECT_ENABLE ( pin -- )
    MASK GPFEN0 @ OR GPFEN0 ! ;

: READ GPFEN0 @ ;
: READ2 GPREN0 @ ;
\ SETUP DEI PIN GPIO 2 & 3 PER I2C (ALT FUNCTIONS)
\: SETUP 900 GPFSEL0 @ OR GPFSEL0 ! ;

\ DI BASE I RESISTORI PULL UP SONO GIA' IMPOSTATI PER I PIN GPIO 2 & 3
\ HEX (4AA95555) TO BIN (0100 1010 1010 1001 0101 0101 0101 0101)
\ OGNI DUE BIT SI MODIFICA LA CONFIGURAZIONE DI UN PIN
\: SETPUP 4AA95555 GPPUP0 ! ;

\ FALLING EDGE DETECT ENABLE PER IL PIN SPECIFICATO
\: FEN (n -- ) MASK GPFEN0 ! ;

\ RISING EDGE DETECT ENABLE PER IL PIN SPECIFICATO
\: REN (n -- ) MASK GPAREN0 ! ;

: I2C{ BASEADDR 804000 + ;
: }I2C DROP ;

I2C{
PIN BSC_CR PIN BSC_SR
PIN BSC_DLEN PIN BSC_SLV
PIN BSC_FIFO PIN BSC_CLKD
PIN BSC_DATD PIN BSC_CLKT
}I2C

\BASEADDR 804000 + CONSTANT BSC_CR
\BASEADDR 804004 + CONSTANT BSC_SR
\BASEADDR 804008 + CONSTANT BSC_DLEN
\BASEADDR 80400C + CONSTANT BSC_SLV
\BASEADDR 804010 + CONSTANT BSC_FIFO
\BASEADDR 804014 + CONSTANT BSC_CLKD
\BASEADDR 804018 + CONSTANT BSC_DATD
\BASEADDR 80401C + CONSTANT BSC_CLKT

: I2C_ENABLE? ( -- ) F BSC_CR GET_BIT . ;
: I2C_ON ( -- ) BSC_CR @ 8000 INVERT AND 8000 OR BSC_CR ! ;
: I2C_OFF ( -- ) BSC_CR @ 8000 INVERT AND 0 OR BSC_CR ! ;
: I2C_START ( -- ) BSC_CR @ 80 OR BSC_CR ! ;
: I2C_WRITE ( -- ) BSC_CR @ 0 INVERT AND 0 OR BSC_CR ! ;
: I2C_CLEAR ( -- ) BSC_CR @ 20 OR BSC_CR ! ;
: I2C_STATUS ( -- ) BSC_SR @ U. ;
: I2C_DLEN ( n -- ) BSC_DLEN ! ;
: I2C_SETSLAVE ( addr -- ) BSC_SLV ! ;
: I2C_GETSLAVE ( -- ) BSC_SLV @ U. ;
: I2C_FIFO ( data -- ) BSC_FIFO ! ;
: I2C_TD ( -- bit ) 1 BSC_SR GET_BIT ;   \Trasferimento completato?
: I2C_AT ( -- bit ) 0 BSC_SR GET_BIT ;   \Trasferimento attivo?
: I2C_RESETDONE ( -- ) BSC_SR @ 2 INVERT AND 2 OR BSC_SR ! ;
: CHECKI2C BSC_CR GET_BIT . ;

: GPIO_I2C ( -- )
    2 GPFSEL GPIO_AF0
    3 GPFSEL GPIO_AF0 ;

\ aspetta fino all'effettivo invio del messaggio
: WAIT_DONE ( -- )
  BEGIN I2C_TD 1 = UNTIL ;

 \ aspetta fino al trasferimento attivo
: WAIT_AT ( -- )
  BEGIN I2C_AT 0 = UNTIL ;

: BSC_ENABLE ( -- ) GPIO_I2C I2C_ON ;

: WRITE_I2C ( data slave len -- )
    I2C_CLEAR
    I2C_RESETDONE
    I2C_DLEN
    I2C_SETSLAVE
    I2C_FIFO
    I2C_WRITE
    I2C_START
    WAIT_DONE
    WAIT_AT ;

\MYCODE\
\ SETUP DEI PIN GPIO 2 & 3 PER I2C (ALT FUNCTIONS)
\: SETUP 900 GPFSEL0 @ OR GPFSEL0 ! ;

\ RESET STATUS REGISTER
\: RESTORE_SR 302 BSC_SR ! ;

\ RESET FIFO
\: RESTORE_FIFO 10 BSC_CR ! ;

\ SETUP SLAVE ADDRESS 
\: SETUP_SLAVE 68 BSC_SLV ! ;

\ Memorizza dati dentro il registro FIFO
\: STORE BSC_FIFO ! ;

\ Avvio nuovo trasferimento
\: TRANSFER 8080 BSC_CR ! ;

\: I2C RESTORE_SR RESTORE_FIFO 1 BSC_DLEN + ! SETUP_SLAVE STORE TRANSFER ;

\ Scrittura di 1 Byte alla volta
\: >I2C RESTORE_SR RESTORE_FIFO 1 BSC_DLEN ! SETUP_SLAVE STORE TRANSFER ;
